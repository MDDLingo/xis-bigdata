# Properties for the JDK loggin facility
# To use this file you have to set the property at startup:
# java -Djava.util.logging.config.file=THISFILE 
# 
# If not, then the config file to be used will be
# the default one, located here: 
# 
# JDK_HOME/jre/lib/logging.properties

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers=java.util.logging.ConsoleHandler
handlers=java.util.logging.FileHandler

# Default global logging level. 
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
# The Level class defines seven levels of logging enlightenment:
#   FINEST, FINER, FINE, CONFIG, INFO, WARNING, SEVERE
#   ALL and OFF are defined values as well
.level=FINEST

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################
# Override of global logging level 
#java.util.logging.ConsoleHandler.level=FINEST
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.SimpleFormatter.format=%4$s: %5$s%n [%2$s]

# Override of global logging level 
#java.util.logging.FileHandler.level=FINEST

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
java.util.logging.FileHandler.pattern=log/java%u.log

# Limiting size of output file in bytes: 
java.util.logging.FileHandler.limit=5000000

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=1

# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.SimpleFormatter.format=%4$s: %5$s%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
fr.inria.atlanmod.json.discoverer.level=ALL
fr.inria.atlanmod.json.discoverer.test.level=ALL
fr.inria.atlanmod.json.discoverer.zoo.level=ALL